!function(f){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=f();else if("function"==typeof define&&define.amd)define([],f);else{var g;(g="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).CodiceFiscale=f()}}(function(){var define,module,exports;return function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n;return o(e[i][1][r]||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r}()({1:[function(require,module,exports){const{getVowelsArray:getVowelsArray,getConsonantsArray:getConsonantsArray}=require("./Utils/stringUtils"),{fillTillLength:fillTillLength}=require("./Utils/arrayUtils"),{internationalize:internationalize}=require("./Utils/dateUtils"),fetch=require("node-fetch");class Calculator{constructor(Person){this.person=Person.data}get name(){let consonants=getConsonantsArray(this.person.name),vowels=getVowelsArray(this.person.name);return consonants.length>3&&(consonants=consonants.filter((char,index)=>1!==index)),fillTillLength([...consonants,...vowels],3,"x")}get lastName(){let consonants=getConsonantsArray(this.person.lastName),vowels=getVowelsArray(this.person.lastName);return fillTillLength([...consonants,...vowels],3,"x")}get dateOfBirth(){const converted=internationalize(this.person.dateOfBirth);let day=converted.getDate();this.gender&&"F"===this.gender&&(day+=40);const monthCodes=["A","B","C","D","E","H","L","M","P","R","S","T"];return[...converted.getFullYear().toString().substr(2,2),...monthCodes[converted.getMonth()],...day.toLocaleString()]}get placeOfBirth(){return new Promise(async(resolve,reject)=>{let placeCodes=await fetch("https://jsonblob.com/api/jsonBlob/c761f0c2-ecf4-11e8-bcc5-9dc9b6e80c56").then(data=>data.json()).catch(error=>reject(error));resolve(Reflect.has(placeCodes,this.person.placeOfBirth.toLocaleUpperCase())?[...Reflect.get(placeCodes,this.person.placeOfBirth.toLocaleUpperCase())]:[..."XXX"])})}get gender(){return this.person.gender}checkDigitCalculator(codeArray){const evenValues="0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25".split(","),oddValues="1,0,5,7,9,13,15,17,19,21,1,0,5,7,9,13,15,17,19,21,2,4,18,20,11,3,6,8,12,14,16,10,22,25,24,22".split(","),digits=[..."0123456789ABCDEFGHIJKLMNOPQRSTUVXYZ"];let oddSum,evenSum;return[..."ABCDEFGHIJKLMNOPQRSTUVWXYZ"][(codeArray.reduce((result,char,idx)=>result+=idx%2==0?Number(oddValues[digits.indexOf(char)]):0,0)+codeArray.reduce((result,char,idx)=>result+=idx%2==1?Number(evenValues[digits.indexOf(char)]):0,0))%26]}static async generateFiscalCode(Person){const isValid=Person.validate({...Person});if(!0!==isValid)throw isValid;const calculatorInstance=new Calculator(Person),preCheckCode=[...calculatorInstance.lastName,...calculatorInstance.name,...calculatorInstance.dateOfBirth,...await calculatorInstance.placeOfBirth].map(char=>char.toLocaleUpperCase());return preCheckCode.push(calculatorInstance.checkDigitCalculator(preCheckCode)),preCheckCode.join("")}}module.exports=Calculator},{"./Utils/arrayUtils":3,"./Utils/dateUtils":4,"./Utils/stringUtils":5,"node-fetch":8}],2:[function(require,module,exports){const validator=require("./Validator");class Person{constructor(name,lastName,dateOfBirth,placeOfBirth,gender){this.name=name,this.lastName=lastName,this.dateOfBirth=dateOfBirth,this.placeOfBirth=placeOfBirth,this.gender=gender.toLocaleUpperCase()}get data(){return{...this}}validate(personData){const errorArray=[];return Object.keys(personData).forEach(key=>{validator[key].isValid(personData[key])||errorArray.push({[key]:{message:validator[key].message}})}),0===errorArray.length||errorArray}}module.exports=Person},{"./Validator":6}],3:[function(require,module,exports){module.exports={fillTillLength(array,newLength,element){for(;array.length<newLength;)array.push(element);return array.length=newLength,array}}},{}],4:[function(require,module,exports){module.exports={internationalize(date){let dateObj=new Date(date);return dateObj instanceof Date&&!isNaN(dateObj)?dateObj:new Date(date.split("/").reverse().join("-"))}}},{}],5:[function(require,module,exports){module.exports={getVowelsArray(string,orderRelation){const vowels=[...string.toLocaleLowerCase()].filter(char=>["a","e","i","o","u"].includes(char));return orderRelation&&"function"==typeof orderRelation?vowels.sort(orderRelation):vowels},getConsonantsArray(string,orderRelation){const consonants=[...string.toLocaleLowerCase()].filter(char=>!["a","e","i","o","u"].includes(char));return orderRelation&&"function"==typeof orderRelation?consonants.sort(orderRelation):consonants}}},{}],6:[function(require,module,exports){module.exports={name:{isValid:value=>value&&"string"==typeof value&&isNaN(parseInt(value)),message:"Il nome deve essere una stringa"},lastName:{isValid:value=>value&&"string"==typeof value&&isNaN(parseInt(value)),message:"Il cognome deve essere una stringa"},dateOfBirth:{isValid:value=>value&&(value.match(/([12]\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01]))/)||value.match(/^([0-2][0-9]|(3)[0-1])(\/)(((0)[0-9])|((1)[0-2]))(\/)\d{4}$/)),message:"La data di nascita deve essere nel formato DD/MM/YYYY oppure YYYY/MM/DD"},placeOfBirth:{isValid:value=>value&&"string"==typeof value&&isNaN(parseInt(value)),message:"Il comune di nascita deve essere una stringa"},gender:{isValid:value=>{switch(value){case"M":case"F":return!0;default:return!1}},message:"Il sesso deve essere o uomo o donna"}}},{}],7:[function(require,module,exports){const Person=require("./Person"),Calculator=require("./Calculator"),CalculateFiscalNumber=async(name,lastName,dateOfBirth,placeOfBirth,gender)=>{try{const code=await Calculator.generateFiscalCode(new Person(name,lastName,dateOfBirth,placeOfBirth,gender));return code}catch(error){throw error}};module.exports=CalculateFiscalNumber},{"./Calculator":1,"./Person":2}],8:[function(require,module,exports){"use strict";var getGlobal,global=function(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==global)return global;throw new Error("unable to locate global object")}();module.exports=exports=global.fetch,exports.default=global.fetch.bind(global),exports.Headers=global.Headers,exports.Request=global.Request,exports.Response=global.Response},{}]},{},[7])(7)});